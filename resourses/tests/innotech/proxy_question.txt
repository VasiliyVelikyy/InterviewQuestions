при проксировании через CGLIB, создается родительский класс проксируемого объекта?

T
Да, при проксировании через CGLIB создается динамический подкласс проксируемого объекта, а не родительский класс.

CGLIB (Code Generation Library) используется для создания прокси-объектов, которые могут проксировать классы, не реализующие интерфейсы. В отличие от проксирования через Java Proxy (которое работает только с интерфейсами), CGLIB создает новый подкласс, который наследует проксируемый класс и переопределяет его методы для добавления дополнительного поведения.

Таким образом, проксируемый объект в CGLIB становится родителем для нового класса-прокси, а не наоборот. Этот прокси-класс может изменять или расширять поведение методов оригинального класса.

Важно отметить, что CGLIB проксирует только неабстрактные классы и может не работать с финальными классами, так как они не могут быть наследованы.